type Club @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  events: [Event] @manyToMany(relationName: "EventClub")
  organizer: [User] @manyToMany(relationName: "ClubUser")
  type: String!
  managerID: ID! @index(name: "byManager")
}

type Event @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String!
  description: String!
  thumbnail: String!
  startAt: AWSDateTime!
  endAt: AWSDateTime
  hosts: [User] @hasMany(indexName: "byEvent", fields: ["id"])
  belongTo: [Club] @manyToMany(relationName: "EventClub")
  users: [User] @manyToMany(relationName: "UserEvent")
}

type User @model @auth(rules: [{allow: groups, groups: ["Manager"], operations: [read, create, update, delete]}, {allow: groups, groups: ["User"], operations: [read, create, update, delete]}]) {
  id: ID!
  email: String!
  password: String!
  avatar: String
  clubs: [Club] @manyToMany(relationName: "ClubUser")
  eventID: ID @index(name: "byEvent")
  events: [Event] @manyToMany(relationName: "UserEvent")
  role: String!
}
